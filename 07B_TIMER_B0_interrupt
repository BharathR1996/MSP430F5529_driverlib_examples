/*
 * 07B_TIMER_B0_interrupt: counts up on timer B0 and then interrupts
 * and the interrupt then toggles the LED.
 *
 * MCLK defaults to ~1.045 MHz
 * Uses SMCLK which defaults to MCLK
 * Divides SMCLK by 16 so ~65.3 KHz
 * With TIMER_PERIOD set to 10000 an interrupt occurs every 10000/65300 secs
 *     or ~153 ms.  The frequency is approximately 3.26 Hz for full cycle.
 *
 * Frank Milburn 	25 August 2016
 */
#include "driverlib.h"

#define  TIMER_PERIOD   10000                          // unsigned 16 bit number
#define  RED_LED       GPIO_PORT_P1,GPIO_PIN0

//--------------------------------  m a i n  -----------------------------------
void main(void)
{
    //Stop WDT
    WDT_A_hold(WDT_A_BASE);

    //Set P1.0 to output direction
    GPIO_setAsOutputPin(RED_LED);

    //Start timer
    Timer_B_clearTimerInterrupt(TIMER_B0_BASE);

    Timer_B_initUpModeParam param = {0};
    	param.clockSource = TIMER_B_CLOCKSOURCE_SMCLK;
    	param.clockSourceDivider = TIMER_B_CLOCKSOURCE_DIVIDER_16;
    	// count up to the following number (period)
    	param.timerPeriod = TIMER_PERIOD;
    	param.timerInterruptEnable_TBIE = TIMER_B_TBIE_INTERRUPT_DISABLE;
    	param.captureCompareInterruptEnable_CCR0_CCIE =
    			TIMER_B_CAPTURECOMPARE_INTERRUPT_ENABLE;
    	param.timerClear = TIMER_B_DO_CLEAR;
    	param.startTimer = true;

    Timer_B_initUpMode(TIMER_B0_BASE, &param);

    //Enter LPM0, enable interrupts
    __bis_SR_register(LPM0_bits + GIE);

    for(;;){

    }
}
//-------------------------  T I M E R B 0   I S R  ----------------------------
#if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)
#pragma vector=TIMERB0_VECTOR
__interrupt
#elif defined(__GNUC__)
__attribute__((interrupt(TIMERB0_VECTOR)))
#endif
void TIMERB0_ISR(void)
{
    GPIO_toggleOutputOnPin(RED_LED);
}
/* This code contains fragments and sections subject to the following
 * copyright:
 *
 * --COPYRIGHT--,BSD
 * Copyright (c) 2016, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * --/COPYRIGHT--*/

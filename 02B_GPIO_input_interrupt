/*
 * 02B_GPIO_input_interrupt: demonstrates push button to toggle an LED.
 * The button causes an interrupt which then toggles the LED.
 *
 * Frank Milburn 	25 August 2016
 * Developed on MSP-EXP430F5529 LaunchPad Rev1.5 on CCS V6.1, TIv16.6.0.STS
 */

#include "driverlib.h"

#define  RED_LED       GPIO_PORT_P1,GPIO_PIN0
#define  BUTTON1       GPIO_PORT_P2,GPIO_PIN1

void setupGPIO();

//--------------------------------  m a i n  -----------------------------------
int main(void) {

	// setup
    WDT_A_hold(WDT_A_BASE);                   // stop watchdog timer

    setupGPIO();

    while(1)
    {
      __bis_SR_register(LPM4_bits + GIE);     // enter LPM4 w/interrupt
      GPIO_toggleOutputOnPin(RED_LED);
      _delay_cycles(500000);                  // debounce switch
    }
  }
//----------------------------- s e t u p G P I O  -------------------------------
void setupGPIO(){

	 // set red LED port and pin to output direction
    GPIO_setAsOutputPin(RED_LED);

    // set button 1 as input, pulled up, enable interrupt High to Low
    GPIO_setAsInputPinWithPullUpResistor(BUTTON1);
    GPIO_selectInterruptEdge(BUTTON1, GPIO_HIGH_TO_LOW_TRANSITION);
    GPIO_clearInterrupt(BUTTON1);
    GPIO_enableInterrupt(BUTTON1);
}

//---------------------------  P o r t  2   I S R  ------------------------------
#if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)
#pragma vector=PORT2_VECTOR
__interrupt void Port_2(void)
#elif defined(__GNUC__)
void __attribute__ ((interrupt(PORT2_VECTOR))) Port_2 (void)
#else
#error Compiler not supported!
#endif
{
  GPIO_clearInterrupt(BUTTON1);
  __bic_SR_register_on_exit(LPM4_bits);     // Exit LPM4
}
/* This code contains fragments and sections subject to the following
 * copyright:
 *
 * --COPYRIGHT--,BSD
 * Copyright (c) 2016, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * --/COPYRIGHT--*/
